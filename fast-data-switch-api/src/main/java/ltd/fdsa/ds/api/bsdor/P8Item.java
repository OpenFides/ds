package ltd.fdsa.ds.api.bsdor;public class P8Item implements Item<Short> {    private final short value;    private final Type type;    private final static Type[] cache = new Type[]{            Type.P001,            Type.P059,            Type.P108,    };    public P8Item(short value) {        this.value = value;        if (value > 0 && value <= 108) {            this.type = cache[value];        } else  // (value > 108 && value <= 0xFF)        {            this.type = Type.P8;        }//        else if (value > 0xFF && value <= 0xFFFF) {//            this.type = Type.P16;//        } else if (value > 0xFFFF && value <= 0xFFFFFFFF) {//            this.type = Type.P32;//        } else if (value > 0xFFFFFFFF) {//            this.type = Type.P64;//        }    }    @Override    public byte[] toByteArray() {        if (this.value > 108) {            return new byte[]{                    ((Short) this.type.getValue()).byteValue(),                    ((Short) this.value).byteValue(),            };        }        return new byte[]{                ((Short) this.type.getValue()).byteValue(),        };    }    @Override    public Short getValue() {        return this.value;    }    @Override    public Type getType() {        return this.type;    }}