package ltd.fdsa.ds.api.bsdor;import lombok.var;import java.io.ByteArrayOutputStream;import java.io.IOException;import java.nio.charset.StandardCharsets;public class StringItem implements Item<String> {    private final byte[] value;    private final Type type;    public StringItem(String value) {        this.value = value.getBytes(StandardCharsets.UTF_8);        var low = this.value.length &0B00111111;        var all = 0B010000000 | low ;        this.type = Type.valueOf(all);    }    @Override    public byte[] toByteArray() {        ByteArrayOutputStream buffer = new ByteArrayOutputStream();        if (this.type == Type.STRINGS) {            buffer.write(Type.STRINGS.getValue());            var length = this.value.length >> 6;            while (length >= 255) {                buffer.write(0B11111111);                length >>= 255;            }            buffer.write(length);            try {                buffer.write(this.value);            } catch (IOException e) {                e.printStackTrace();            }        }        return buffer.toByteArray();    }    @Override    public String getValue() {        return new String(this.value, StandardCharsets.UTF_8);    }    @Override    public Type getType() {        return this.type;    }}