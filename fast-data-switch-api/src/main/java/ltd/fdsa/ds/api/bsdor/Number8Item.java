package ltd.fdsa.ds.api.bsdor;/* * 8 位整型 (0 到 255) * */public class Number8Item implements Item<Byte> {    private final byte value;    private final Type type;    public Number8Item(Integer value) {        if (value < -0xFF && value > 0xFF) {            throw new IllegalArgumentException();        }        if (value > -60 && value <= 108) {            this.type = Type.numberOf(value);        } else {            this.type = Type.P_NUM8;        }        this.value = value.byteValue();    }    @Override    public byte[] toByteArray() {        if (this.value > 108 || this.value < -59) {            return new byte[]{                    this.type.getValue().byteValue(),                    this.value,            };        }        return new byte[]{                this.type.getValue().byteValue(),        };    }    @Override    public Byte getValue() {        return this.value;    }    @Override    public Type getType() {        return this.type;    }}